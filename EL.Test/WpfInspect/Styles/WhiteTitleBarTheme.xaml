<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ThemeColor" Color="#002641"/>
    <SolidColorBrush x:Key="WindowTextColor" Color="Black"/>
    <SolidColorBrush x:Key="BorderColor" Color="Black"/>
    <SolidColorBrush x:Key="MouseOverColor" Color="LightGray"/>
    <SolidColorBrush x:Key="MouseClickColor" Color="Gray"/>

    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <!--<Setter Property="BorderThickness" Value="1" />-->
        <Setter Property="Background" Value="{DynamicResource ThemeColor}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverColor}" />
                        </Trigger>-->
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseClickColor}" />
                        </Trigger>-->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard >
                                    <DoubleAnimation  Storyboard.TargetProperty="Opacity" From="1" To=".5"  Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard >
                                    <DoubleAnimation  Storyboard.TargetProperty="Opacity" From=".5" To="1"  Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleBarButtonPathStyle" TargetType="{x:Type Path}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="46"/>
        <!--<Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>-->
        <Setter Property="Stroke" Value="White"/>
        <!--<Setter Property="StrokeThickness" Value="1"/>-->
    </Style>

    <Style x:Key="SubmitBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="39"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#0085FF"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#0085FF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" CornerRadius="6" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="LeftBottom">
                            <Setter Property="CornerRadius" Value="0,0,0,5" TargetName="bd"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="LeftTop">
                            <Setter Property="CornerRadius" Value="5,0,0,5" TargetName="bd"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="RightBottom">
                            <Setter Property="CornerRadius" Value="0,0,5,0" TargetName="bd"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="RightTop">
                            <Setter Property="CornerRadius" Value="0,5,5,0" TargetName="bd"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="All">
                            <Setter Property="CornerRadius" Value="6" TargetName="bd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009dda"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFE16605"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#002641"/>
        <Setter Property="Tag" Value=""/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="6" Background="{TemplateBinding Background}" Tag="{TemplateBinding Tag}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Background="White" Width="40" Height="24" CornerRadius="6" HorizontalAlignment="Center"  BorderBrush="#0085FF" BorderThickness="1">
                                <Image Source="{Binding ElementName=border, Path=Tag}" Height="16" Width="16"/>
                            </Border>
                            <TextBlock Grid.Row="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="14"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#009dda"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFE16605"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>