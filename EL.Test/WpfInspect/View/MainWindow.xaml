<Window x:Class="WpfInspect.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:WpfInspect.Models"
        xmlns:elementNodes="clr-namespace:Automation.Inspect;assembly=EL.Automation"
        xmlns:local="clr-namespace:WpfInspect"
        xmlns:convers="clr-namespace:WpfInspect.Convers"
        xmlns:viewmodels="clr-namespace:WpfInspect.ViewModels"
        xmlns:Entitys="clr-namespace:Automation.Inspect;assembly=EL.Automation"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        StateChanged="WindowStateChangedHandler" Initialized="OnWindowInitialized" 
        Height="740" Width="1276">
    <Window.Effect>
        <DropShadowEffect BlurRadius="20" Color="#FF858484" Direction="-90" ShadowDepth="1" Opacity="0.3"/>
    </Window.Effect>
    <Border Background="White" Margin="1 1 1 0" BorderThickness="1" CornerRadius="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
                <RowDefinition Height="63" />
            </Grid.RowDefinitions>
            <!--Custom Window TitleBar-->
            <Border Style="{StaticResource WindowMainPanelStyle}" Background="#002641" CornerRadius="10 10 0 0" MouseLeftButtonDown="Border_MouseLeftButtonDown">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="1" Margin="100 12 0 0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" Text="界面探测器" Height="30" />
                    <Button Grid.Column="2" Click="OnMinimizeButtonClick" RenderOptions.EdgeMode="Aliased" Style="{DynamicResource TitleBarButtonStyle}" Height="30">
                        <Path Data="M 18,15 H 28" Style="{DynamicResource TitleBarButtonPathStyle}"/>
                    </Button>
                    <Button Name="RestoreButton" Grid.Column="3" Click="OnMaximizeRestoreButtonClick" Style="{DynamicResource TitleBarButtonStyle}" Height="30">
                        <Path Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Style="{DynamicResource TitleBarButtonPathStyle}"/>
                    </Button>
                    <Button Name="MaximizeButton" Grid.Column="3" Click="OnMaximizeRestoreButtonClick" Style="{DynamicResource TitleBarButtonStyle}" Height="30">
                        <Path Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Style="{DynamicResource TitleBarButtonPathStyle}"/>
                    </Button>
                    <Button Grid.Column="4" Command="{Binding CloseWindow}" Style="{DynamicResource TitleBarButtonStyle}" Height="30">
                        <Path Data="M 18,11 27,20 M 18,20 27,11" Style="{DynamicResource TitleBarButtonPathStyle}"/>
                    </Button>
                </Grid>
            </Border>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Background="#002641" Name="表头块" MouseLeftButtonDown="Border_MouseLeftButtonDown">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Name="界面探测器右边模块">
                        <Button Width="100" Content="捕获目标元素" Tag="/Resources/捕获目标元素@3x.png" Margin="0,0,0,5" Command="{Binding CatchElement}" Style="{StaticResource ImageStyle}"/>
                        <Button Width="100" Content="捕获相似元素" Tag="/Resources/捕获相似元素@3x.png" Margin="10,0,0,5" Command="{Binding CatchSimilarElement}" Style="{StaticResource ImageStyle}"/>
                        <Button Width="100" x:Name="HighLightButton" Content="高亮验证" Tag="/Resources/高亮验证@3x.png" Margin="10,0,0,5" Command="{Binding HighLightElement}" Style="{StaticResource ImageStyle}"/>
                        <Button Width="100" Content="保存元素" Tag="/Resources/保存元素@3x.png" Margin="10,0,0,5" Command="{Binding SaveElmenet}" Style="{StaticResource ImageStyle}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="350"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Name="历史元素块">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="  历史元素" FontSize="15" VerticalContentAlignment="Center" Background="Transparent" Height="48"/>
                        <Menu x:Name="MenuNode" Grid.Row="1" Background="#F5F5F5">
                            <MenuItem x:Name="NameMenuItem" Header="排序：更新时间 ↓" Margin="5 10 0 0" VerticalAlignment="Center" VerticalContentAlignment="Center" FontSize="15" Height="49" Width="220">
                                <MenuItem Header="名称" Click="SortName_Click" IsCheckable="True" IsChecked="{Binding HistoryOrderByName}" Background="White"/>
                                <MenuItem Header="创建时间" Click="SortName_Click" IsCheckable="True" IsChecked="{Binding HistoryOrderByCreateTime}" Background="White"/>
                                <MenuItem Header="更新时间" Click="SortName_Click" IsCheckable="True" IsChecked="{Binding HistoryOrderByUpdateTime}" Background="White"/>
                                <Separator />
                                <MenuItem Header="↑" Click="SortUp_Click" IsCheckable="True" IsChecked="{Binding HistoryOrderUp}" Background="White"/>
                                <MenuItem Header="↓" Click="SortUp_Click" IsCheckable="True" IsChecked="{Binding HistoryOrderByDown}" Background="White"/>
                            </MenuItem>
                        </Menu>
                        <ListBox Grid.Row="2" BorderThickness="1" BorderBrush="#F5F5F5" ItemContainerStyle="{StaticResource HistoryStyle}" Name="HistoryElmentListBox" Background="#F5F5F5" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding HistoryElements}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="删除元素" Command="{Binding DeleteHistoryElemnt}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBox">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="0">
                                                    <ScrollViewer Focusable="False">
                                                        <ItemsPresenter />
                                                    </ScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Style>
                        </ListBox>
                    </Grid>

                    <Grid Grid.Column="1" Name="句柄数模块">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="0"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="可视化" Name="Handle" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" FontSize="15"/>
                        <TreeView BorderThickness="1" BorderBrush="#EBEBEB" Width="350" Name="Tree" ItemsSource="{Binding Elements}" Grid.Row="2" HorizontalAlignment="Left" Style="{StaticResource DefaultTreeView}">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="MinHeight" Value="33"/>
                                    <Setter Property="Background" Value="#FFFFFF"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Margin" Value="0" />

                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <ControlTemplate.Resources>
                                                    <convers:IndentConverter  x:Key="indentConverter"/>
                                                </ControlTemplate.Resources>
                                                <Grid Background="#FFFFFF">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Border Name="itemBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent">
                                                            <Grid x:Name="ItemRoot" Margin="{Binding Converter={StaticResource indentConverter},RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="16" />
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ToggleButton x:Name="Expander" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="Width" Value="16"/>
                                                                            <Setter Property="Height" Value="16"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                                                            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#66645e" Stroke="#66645e">
                                                                                                <Path.RenderTransform>
                                                                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                                                                </Path.RenderTransform>
                                                                                            </Path>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                                                    <Setter.Value>
                                                                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                                            </Trigger>
                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                                                                                            </Trigger>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                                    <Condition Property="IsChecked" Value="True"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#66645e"/>
                                                                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#66645e"/>
                                                                                            </MultiTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                                <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch"/>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding HasChild}" Value="false">
                                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSecond}" Value="true">
                                                        <Setter Property="Background" TargetName="itemBackground" Value="#F5F5F5"/>
                                                    </DataTrigger>
                                                    <Trigger Property="HasItems" Value="False">
                                                        <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Hidden"/>
                                                    </Trigger>
                                                    <Trigger Property="IsExpanded" Value="False">
                                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                                    </Trigger>

                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" TargetName="itemBackground" Value="#0085FF"/>
                                                        <Setter Property="CornerRadius" TargetName="itemBackground" Value="6"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsFocused" Value="False"/>
                                                            <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="CornerRadius" TargetName="itemBackground" Value="6"/>
                                                        <Setter Property="BorderThickness" TargetName="itemBackground" Value="1"/>
                                                        <Setter Property="BorderBrush" TargetName="itemBackground" Value="#0085FF"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <EventSetter Event="Selected" Handler="TreeViewSelectedHandler" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="设为目标元素" Command="{Binding LoadElement}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}" BorderBrush="{x:Null}" BorderThickness="0"/>
                                </ContextMenu>
                            </TreeView.ContextMenu>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type viewmodels:ElementViewModel}" ItemsSource="{Binding Path = Children}">
                                    <Grid>
                                        <Grid.Resources>
                                            <convers:BoolToVisible x:Key="boolToVisible"/>
                                            <convers:VisibleToReverse x:Key="visibleToReverse"/>
                                        </Grid.Resources>
                                        <StackPanel MinHeight="33" x:Name="groupinginfo" Orientation="Horizontal" Background="Transparent" HorizontalAlignment="Left">
                                            <TextBlock Margin="3 0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} {1}">
                                                        <Binding Path="ControlTypeName" />
                                                        <Binding Path="Name" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </Grid>

                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="    截图" Background="#F5F5F5" FontSize="15" VerticalContentAlignment="Center"/>
                        <Label Content="    筛选结果" Background="#F5F5F5" FontSize="15" Grid.Column="1" VerticalContentAlignment="Center"/>

                        <!--截图-->
                        <ListBox Grid.Row="1" BorderBrush="#EBEBEB" x:Name="listBox" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding ImagesViewModels}" ItemContainerStyle="{StaticResource ImageBoxStyle}">
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBox">
                                                <Border x:Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="0">
                                                    <ScrollViewer Focusable="False">
                                                        <ItemsPresenter />
                                                    </ScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Style>
                        </ListBox>

                        <!--筛选结果-->
                        <ListView Grid.Row="1" Grid.Column="1" ItemsSource="{Binding NodeFiltDetails}" Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource NodeFiltDetailsListViewItemStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding FiltRes, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Height" Value="0"/>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" Background="#F5F5F5">
                            <Label Grid.Row="2" Content="   筛选特征" FontSize="15" VerticalContentAlignment="Center"/>
                            <Button Margin="15 0 0 0" Content="恢复" Style="{StaticResource SubmitBtnStyle}" FontSize="15" Height="24" Width="44" Command="{Binding Initialized}"/>
                        </StackPanel>

                        <!--筛选特征-->
                        <ListView Grid.Row="3" BorderBrush="#EBEBEB" x:Name="ItemDetails" ItemsSource="{Binding PathNodeDetails}" Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource ItemDetailsListViewItemStyle}">
                            <ListView.View>
                                <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                    <GridViewColumn Header="启用" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding IsActive, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="节点">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding FiltRes, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <!--筛选属性更改等-->
                        <Grid Grid.Row="3" Grid.Column="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" x:Name="HumidifyEventLogCol0"/>
                                <Grid Grid.Column="1" x:Name="HumidifyEventLogCol1"/>
                                <Grid Grid.Column="2" x:Name="HumidifyEventLogCol2"/>
                            </Grid>

                            <ListView Grid.Row="3" BorderBrush="#EBEBEB" Grid.Column="1" ItemsSource="{Binding NodePropertyDetails}" Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource NodePropertyDetailsListViewItemStyle}">
                                <ListView.View>
                                    <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                        <GridViewColumn Header="启用" Width="{Binding ElementName=HumidifyEventLogCol0,Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsActive, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="属性名" Width="{Binding ElementName=HumidifyEventLogCol1,Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding PropertyName, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="属性值" Width="{Binding ElementName=HumidifyEventLogCol2,Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid Width="{Binding ElementName=HumidifyEventLogCol2,Path=ActualWidth}" Height="35">
                                                        <TextBox Text="{Binding PropertyValue, Mode=TwoWay}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                                                 MaxLines="1"
                                                                  MinWidth="120">
                                                        </TextBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
