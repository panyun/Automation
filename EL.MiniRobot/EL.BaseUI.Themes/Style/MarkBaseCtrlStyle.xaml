<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Path" x:Key="MarkPathStyle">
        <Setter Property="Stroke" Value="{Binding Color}"></Setter>
        <Setter Property="StrokeThickness" Value="{Binding Thickness}"></Setter>
        <Setter Property="Cursor" Value="SizeAll"></Setter>
        <Setter Property="Data">
            <Setter.Value>
                <PathGeometry>
                    <PathFigure StartPoint="{Binding StartPoint}">
                        <PolyLineSegment Points="{Binding PointCollection}" />
                    </PathFigure>
                </PathGeometry>
            </Setter.Value>
            
        </Setter>
    </Style>

    <Style TargetType="Polygon" x:Key="MarkPolygonStyle">
        <Setter Property="Fill" Value="{Binding Color}"></Setter>
        <Setter Property="Stroke" Value="{Binding Color}"></Setter>
        <Setter Property="StrokeThickness" Value="{Binding Thickness}"></Setter>
        <Setter Property="Points" Value="{Binding PointCollection}"></Setter>
        <Setter Property="Cursor" Value="SizeAll"></Setter>
    </Style>

    <Style TargetType="Image" x:Key="MarkImageStyle">
        <Setter Property="Stretch" Value="{Binding Uniform}"></Setter>
        <Setter Property="Source" Value="{Binding ImageData,Converter={StaticResource Byte2BitmapImageConvert}}"></Setter>
        <Setter Property="Cursor" Value="SizeAll"></Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="MarkTextBlockStyle">
        <Setter Property="Text" Value="{Binding Text}"></Setter>
        <Setter Property="MaxWidth" Value="{Binding MaxWidth}"></Setter>
        <Setter Property="FontSize" Value="{Binding TextFontSize}"></Setter>
        <Setter Property="Foreground" Value="{Binding Color}"></Setter>
        <Setter Property="FontFamily" Value="{Binding TxtFontFamily}"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="Cursor" Value="SizeAll"></Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="MarkTextBoxStyle">
        <Setter Property="Text" Value="{Binding Text}"></Setter>
        <Setter Property="FontSize" Value="{Binding TextFontSize}"></Setter>
        <Setter Property="Foreground" Value="{Binding Color}"></Setter>
        <Setter Property="FontFamily" Value="{Binding TxtFontFamily}"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="AcceptsReturn" Value="True"></Setter>
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{Binding BorderBrushes}"></Setter>
        <Setter Property="BorderThickness" Value="{Binding Thickness}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Cursor="SizeAll"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"  Cursor="Arrow"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>