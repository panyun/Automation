<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:attach="clr-namespace:EL.BaseUI.Themes">
    <!-- Simple CheckBox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{DynamicResource Control_BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control_BorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="10 0 0 0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize_Second}"/>
        <Setter Property="Foreground" Value="{StaticResource Font_Second_ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Path x:Name="CheckMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{DynamicResource Control_Focused_Brush}" Margin="3 5 0 0" Stretch="None"
                                      Visibility="Collapsed"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Control_BackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Control_MouseOver_Brush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckMark"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Control_Focused_Brush}" TargetName="Border"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource Control_DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--开关效果   on/off-->
    <Style x:Key="OnOrOff_CheckBox_Style"
           TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundWithOnOrOff}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize_Second}" />
        <Setter Property="Foreground" Value="{DynamicResource Font_Second_ForegroundBrush}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Width" Value="63"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="attach:AttachedPropertyHelper.CornerRadius" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                CornerRadius="{TemplateBinding attach:AttachedPropertyHelper.CornerRadius}">
                            <Grid x:Name="markGrid">
                                <Border Width="18"
                                        x:Name="indeterminateMark"
                                        Background="{StaticResource Font_Second_ForegroundBrush}"
                                        Height="18"                                        
                                        CornerRadius="12"
                                        HorizontalAlignment="Left">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0" />
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txtOn"
                                           Text="on"
                                           FontWeight="Regular"
                                           Visibility="Collapsed"
                                           Margin="10,3,0,0" />
                                <TextBlock x:Name="txtOff"
                                           Text="off"
                                           FontWeight="Regular"
                                           Visibility="Visible"
                                           Margin="25,4,0,0" />

                            </Grid>
                        </Border>

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">

                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Visibility"
                                    TargetName="txtOn"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="txtOff"
                                    Value="Collapsed" />
                            <Setter Property="Background" TargetName="indeterminateMark" Value="{StaticResource Control_Pressed_Brush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="indeterminateMark"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                         To="38"
                                                         Duration="00:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="indeterminateMark"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                         To="2"
                                                         Duration="00:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter Property="Visibility"
                                    TargetName="txtOn"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="txtOff"
                                    Value="Visible" />
                            <Setter Property="Margin" TargetName="indeterminateMark" Value="2 0 0 0" />
                            <Setter Property="Background" TargetName="indeterminateMark" Value="{StaticResource Font_Second_ForegroundBrush}" />
                            
                            <Setter Property="HorizontalAlignment"
                                    TargetName="indeterminateMark"
                                    Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OPRoom_CheckBox_Style" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{StaticResource Control_Transparent}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForeground}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="15 0 "/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  />
                                <Path x:Name="CheckMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource Control_Pressed_Brush}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1" Stretch="None"
                                      Visibility="Collapsed"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Control_BackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Control_MouseOver_Brush}" TargetName="Border"/>
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckMark"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Control_Focused_Brush}" TargetName="Border"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource Control_DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>