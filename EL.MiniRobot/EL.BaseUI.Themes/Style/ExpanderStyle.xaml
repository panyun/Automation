<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:attach="clr-namespace:EL.BaseUI.Themes"
                    >

    <!-- Simple Expander ToggleButton - This Button is used by the Expander control. When it is toggled it switches visibility on the Up_Arrow and Down_Arrow -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="收起"
                       x:Name="PART_ToggleButtonName" VerticalAlignment="Center" FontSize="{StaticResource FontSize_Second}" Foreground="{StaticResource Font_Second_ForegroundBrush}"></TextBlock>
            <Grid Margin="10 0 0 0">
                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="Transparent" Stroke="Transparent"/>
                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" StrokeThickness="2" Stroke="{DynamicResource Control_MouseOver_Brush}" Data="M 0 0 L 6 6 L 12 0 "/>
                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" StrokeThickness="2" Stroke="{DynamicResource Control_MouseOver_Brush}" Data="M 0 6 L 6 0 L 12 6 "/>
            </Grid>
        </StackPanel>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{DynamicResource Control_Transparent}" TargetName="Rectangle"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" Value="{DynamicResource Control_Transparent}" TargetName="Rectangle"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="false">
                <Setter Property="Text"
                        Value="展开"
                        TargetName="PART_ToggleButtonName" />
                
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{DynamicResource Control_DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Simple Expander 
     This uses the Simpler ExpanderToggleButton. It sets Visibility on the ContentPresenter to expand
     Limitations : The Simple Expander only expands down -->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Control_BackgroundBrush3}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control_Transparent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="46"/>
                            <RowDefinition Height="*" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center" FontSize="{StaticResource FontSize_Main}" Foreground="{StaticResource Font_Title_ForegroundBrush}" Text="{TemplateBinding Header}" Margin="{StaticResource ControlToBorderThickness}"/>
                                <ToggleButton Grid.Column="1" Width="80" 
                                              Visibility="{TemplateBinding attach:AttachedPropertyHelper.IsShowToggleButton,Converter={StaticResource BoolToVisibilityConverter}}"
                                              Template="{DynamicResource ExpanderToggleButton}" Background="{DynamicResource Control_Transparent}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                                
                            </Grid>
                        </Border>
                        <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" Background="{DynamicResource Control_BackgroundBrush2}" BorderBrush="{DynamicResource Control_Transparent}" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource Control_DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>