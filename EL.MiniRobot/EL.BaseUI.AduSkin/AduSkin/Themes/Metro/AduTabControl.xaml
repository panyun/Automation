<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Adu="clr-namespace:AduSkin.Controls.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/AduSkin;component/Themes/Metro/MetroBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Adu:AduTabControl}">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>2,2,2,2</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <!--  容器背景色  -->
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#00ffffff</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <!--  边框  -->
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>Transparent</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <!--  边框  -->
        <!--<Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>-->
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid
                        Name="templateRoot"
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <!--<Border  BorderBrush="#10ffffff" BorderThickness="0,0,0,1" HorizontalAlignment="Center">-->
                        <TabPanel
                            Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,0,0,0"
                            Panel.ZIndex="1"
                            Background="#00FFFFFF"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <!--</Border>-->
                        <Border
                            Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="content"
                                Margin="{TemplateBinding Control.Padding}"
                                Content="{TemplateBinding TabControl.SelectedContent}"
                                ContentSource="SelectedContent"
                                ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <!--<VisualState x:Name="SelectionStart"/>
                                <VisualState x:Name="SelectionEnd">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0,20,0,-20" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.0"/>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectionLoaded">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>-->
                                <VisualState x:Name="SelectionStart" />
                                <VisualState x:Name="SelectionEnd">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(Margin)"
                                            To="30,0,-30,0"
                                            Duration="0:0:0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0"
                                            Duration="0:0:0.0" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(Margin)"
                                            To="0"
                                            Duration="0:0:0.5" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectionLoaded">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(Margin)"
                                            To="0"
                                            Duration="0:0:0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="HeaderPanel" Property="Border.BorderThickness">
                                <Setter.Value>
                                    0
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">

                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>